<?php
// $Id$

/**
 * @file
 * Views integration for the Group module.
 */

/**
 * Group register field.
 */
define('GROUP_VIEWS_FIELD', 'group_views');

/**
 * Implements hook_menu().
 */
function group_views_menu() {
  $items = array();

  $items['admin/config/group/group-views'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('group_views_settings'),
    'title' => 'Group views settings',
    'access arguments' => array('administer site configuration'),
    'description' => 'Configure group views.',
    'file' => 'group_views.admin.inc',
  );

  return $items;
}


/**
 * Implements of hook_views_api().
 */
function group_views_views_api() {
  return array(
    'api' => 2,
  );
}

/**
 * Implement hook_field_formatter_info().
 */
function group_views_field_formatter_info() {
  return array(
    'group_views_default' => array(
      'label' => t('Group Views'),
      'field types' => array('list_text'),
    ),
  );
}

/**
 * Implement group_fields_info().
 */
function group_views_group_fields_info() {
  $items[GROUP_VIEWS_FIELD] = array(
    'type' => array('group'),
    'description' => t('Add organic groups Views field to fieldable entities that are groups.'),
    'field' => array(
      'field_name' => GROUP_VIEWS_FIELD,
      'type' => 'list_text',
      'cardinality' => 1,
      'settings' => array('allowed_values' => '', 'allowed_values_function' => 'group_views_field_allowed_values'),
    ),
    'instance' => array(
      'label' => t('Groups views'),
      'widget_type' => 'options_select',
      'display' => array(
        'full' => array(
          'label' => 'above',
          'type' => 'group_views_default',
        ),
        'teaser' => array(
          'label' => 'above',
          'type' => 'group_views_default',
        ),
      ),
    ),
  );

  return $items;
}


/**
 * Get all the Views.
 *
 * @param $include_global
 *   TRUE if the "global" option should be added to the Views list.
 */
function group_views_field_allowed_values($include_global = TRUE) {
  $return = array();

  // Add "global" views option.
  if ($include_global) {
    $return['__global'] = t('Use site-wide Views definition');
  }
  foreach (views_get_all_views() as $view_id => $view) {
    if (empty($view->disabled)) {
      $view_name = check_plain($view->name);
      foreach($view->display as $display) {
        $return[$view_id . ' ' .$display->id] = $view_name . ' (' . check_plain($display->display_title) .')';
      }
    }
  }

  return $return;
}

/**
 * Implements hook_field_formatter_view().
 */
function group_views_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();

  if ($field['field_name'] == GROUP_VIEWS_FIELD && !empty($entity->{GROUP_VIEWS_FIELD}[LANGUAGE_NONE][0]['value'])) {
    $view = $entity->{GROUP_VIEWS_FIELD}[LANGUAGE_NONE][0]['value'] == '__global' ? variable_get('group_views_global_view', '') : $entity->{GROUP_VIEWS_FIELD}[LANGUAGE_NONE][0]['value'];
    if ($view = explode(' ', $view)) {
      $element[0] = views_embed_view($view[0], $view[1]);
    }
  }

  return $element;
}